# Bed commands
[gcode_macro M140]
gcode:
    ; PASS
[gcode_macro M190]
gcode:
    ; PASS

[gcode_macro M601]
gcode:
  PAUSE

[force_move]
enable_force_move: True

[gcode_macro _preheat_PLA]
gcode:
    M190 S60
    M104 S210

[gcode_macro _preheat_PETG]
gcode:
    M190 S70
    M104 S230

[gcode_macro _preheat_EPET]
gcode:
    M190 S65
    M104 S245

[gcode_macro _preheat_MAX]
gcode:
    M104 S273

[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    #SET_PIN PIN=_BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    #SET_PIN PIN=_BEEPER_pin VALUE=0

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  350
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  420
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    {% set y = printer.toolhead.axis_minimum.y + 5 %}
    SAVE_GCODE_STATE NAME=state
    PAUSE_BASE
    G27 Y={y}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
 M106 S0
 TURN_OFF_HEATERS
 CLEAR_PAUSE
 SDCARD_RESET_FILE
 CANCEL_PRINT_BASE
 G27
 M300
 SET_IDLE_TIMEOUT TIMEOUT=300

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    M300
    ##### set defaults #####
    {%set min_extrude_temp = printer.configfile.settings["extruder"]["min_extrude_temp"]|int %}
    {%set act_extrude_temp = printer.extruder.temperature|int %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if act_extrude_temp > min_extrude_temp %}
      G11 ;unretract
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    RESUME_BASE {get_params}
    G92 E0
    RESTORE_GCODE_STATE NAME=state
    SET_SKEW_CORRECTION

[gcode_macro M600]
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    UNLOAD_FILAMENT
    M300
    M300
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro START_PRINT]
gcode:
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}
    SET_PAUSE_AT_LAYER ENABLE=0
    G90 ;absolute coordinates
    SET_GCODE_OFFSET Z=0.0
    M221 S100 ; reset flow
    M107 ;Fan OFF
    M104 S{EXTRUDER_TEMP} ;start heating
    G28 ; home
    SET_SKEW_CORRECTION
    # BED_MESH_CALIBRATE ADAPTIVE=1
    BED_MESH_PROFILE load=manual
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP} ;this command doesn't wait for convergence
    LINEADEPURGA

[gcode_macro TEST_LINEA]
gcode:
    M109 S215
    G28
    LINEADEPURGA
    G1 X5 Y5

[gcode_macro LINEADEPURGA]
gcode:
    {% set travel_speed = printer.configfile.settings['printer'].max_velocity * 60 |float %}
    {% set height = 0.3 |float %}
    {% set purge_length = 60 |int %}
    ; End of config
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_extrude_cross_section = 3.999 * printer.configfile.settings["extruder"]["nozzle_diameter"] ** 2 |float %} ; W*H
    {% set filament_diameter = printer.configfile.settings["extruder"]["filament_diameter"] |float %}
    {% set filament_cross_section = (filament_diameter / 2) ** 2 * 3.14159 |float %}
    {% set purge_amount = max_extrude_cross_section * purge_length / filament_cross_section |float %}
    
    M83 ;relative extrusion
    G90 ;absolute pos
    G1 X{max_x-2} Y2 F{travel_speed}
    G1 Z{height}
    G91 ;relative pos
    G1 E4 F120
    G1 X-{purge_length} E{purge_amount} F{purge_length / purge_amount * 120}
    G0 X-10 F{travel_speed}
    G90 ;absolute pos
    G92 E0 ;reset ext
    

[gcode_macro END_PRINT]
gcode:
    TURN_OFF_HEATERS
    G10 ;retract
    G10 ;retract
    G91
    G1 Z2
    G90
    M106 S255
    M107
    G27 ;park
    
[gcode_macro G27]
description: Park
gcode:
    {% set x = params.X|default(printer.toolhead.axis_maximum.x - 5)|float %}
    {% set y = params.Y|default(printer.toolhead.axis_maximum.y - 5)|float %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z > 20 %}
      {% set z = 1 %}
    {% else %}
      {% set z = 20 %}
    {% endif %}
    {% set max_velocity = printer.configfile.settings['printer'].max_velocity * 60 %}
    {% set max_z_velocity = printer.configfile.settings['printer'].max_z_velocity * 60 %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    {%set min_extrude_temp = printer.configfile.settings["extruder"]["min_extrude_temp"]|int %}
    {%set act_extrude_temp = printer.extruder.temperature|int %}
    ##### end of definitions #####
    G91
    {% if act_extrude_temp > min_extrude_temp %}
      G10 ;retract
    {% else %}
      RESPOND MSG="Extruder not hot enough"
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F{max_z_velocity}
      G90
      G1 X{x} Y{y} F{max_velocity}
    {% else %}
      RESPOND MSG="Printer not homed"
    {% endif %}

[homing_override]
gcode:
  {% set x = (printer.toolhead.axis_maximum.x / 2) - printer.configfile.settings['probe'].x_offset %}
  {% set y = (printer.toolhead.axis_maximum.y / 2) - printer.configfile.settings['probe'].y_offset %}
  {% set z_hop = 3 %}
  {% set home = '' %}
  ;Conditional G28
  ;if an axis was specified home the axis else home if needed
  {% if rawparams %}
    {% if 'X' in rawparams|upper %}{% set home = home ~ 'X' %}{% endif %}
    {% if 'Y' in rawparams|upper %}{% set home = home ~ 'Y' %}{% endif %}
    {% if 'Z' in rawparams|upper %}{% set home = home ~ 'Z' %}{% endif %}
  {% else %}
    {% if 'x' not in printer.toolhead.homed_axes %}{% set home = home ~ ' X' %}{% endif %}
    {% if 'y' not in printer.toolhead.homed_axes %}{% set home = home ~ ' Y' %}{% endif %}
    {% if 'z' not in printer.toolhead.homed_axes %}{% set home = home ~ ' Z' %}{% endif %}
  {% endif %}
  {% if 'Z' in home %}
    # respond msg='G28 {rawparams} -> Homing {home}'
    SET_SKEW CLEAR=1
    SET_KINEMATIC_POSITION Z=1
    G1 Z{z_hop} F720
    {% if 'x' not in printer.toolhead.homed_axes %}G28 X{% endif %}
    {% if 'y' not in printer.toolhead.homed_axes %}G28 Y{% endif %}
    G1 X{x} Y{y} F5000
    G28 Z
    G1 Z{z_hop}
  {% elif home %}
    # respond msg='Homing: '{home}
    SET_SKEW CLEAR=1
    G28 {home}
  {% endif %}
