# MACROS #

[gcode_macro M600]
description: Filament change
gcode: 
  PAUSE X=10 Y=10 Z_MIN=50
  M300
  M300

[idle_timeout]
gcode:
  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Idle Timeout: Extruder powered down")}
    M104 S0   ; Set Hot-end to 0C (off)
  {% else %}
    {action_respond_info("Idle Timeout: Stepper and Heater powered down")}
    TURN_OFF_HEATERS
    M84
  {% endif %}

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  550
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=state
    M300 # beep
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    M300
    M300
    RESTORE_GCODE_STATE NAME=state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  550
variable_purge_distance:  15
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=state
    G91
    M300 # beep
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    M300
    M300
    RESTORE_GCODE_STATE NAME=state

# [gcode_macro PAUSE]
# description: Pause the actual running print
# rename_existing: PAUSE_BASE
# gcode:
#     SAVE_GCODE_STATE NAME=state
#     PAUSE_BASE
#     G27

# [gcode_macro CANCEL_PRINT]
# description: Cancel the actual running print
# rename_existing: CANCEL_PRINT_BASE
# gcode:
#  M106 S0
#  TURN_OFF_HEATERS
#  CLEAR_PAUSE
#  SDCARD_RESET_FILE
#  CANCEL_PRINT_BASE
#  G27
#  M300
#  SET_IDLE_TIMEOUT TIMEOUT=300

# [gcode_macro RESUME]
# description: Resume the actual running print
# rename_existing: RESUME_BASE
# gcode:
#     M300
#     ##### set defaults #####
#     {%set min_extrude_temp = printer.configfile.settings["extruder"]["min_extrude_temp"]|int %}
#     {%set act_extrude_temp = printer.extruder.temperature|int %}
#     #### get VELOCITY parameter if specified ####
#     {% if 'VELOCITY' in params|upper %}
#       {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
#     {%else %}
#       {% set get_params = "" %}
#     {% endif %}
#     ##### end of definitions #####
#     G91
#     {% if act_extrude_temp > min_extrude_temp %}
#       G11 ;unretract
#       _Park_unretract
#     {% else %}
#       {action_respond_info("Extruder not hot enough")}
#     {% endif %}
#     RESUME_BASE {get_params}
#     G92 E0
#     RESTORE_GCODE_STATE NAME=state

[gcode_macro START_PRINT]
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
    G90 ;absolute coordinates
    SET_GCODE_OFFSET Z=0.0
    M221 S100 ; reset flow
    M107 ;Fan OFF
    M140 S{BED_TEMP}
    TEMPERATURE_WAIT sensor="heater_bed" MINIMUM={BED_TEMP}
    M104 S{EXTRUDER_TEMP} ;start heating
    G28 ; home
    Z_TILT_ADJUST
    BED_MESH_CALIBRATE
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP} ;this command doesn't wait for convergence
    LINEADEPURGA

[gcode_macro END_PRINT]
gcode:
    TURN_OFF_HEATERS
    M107
    _TOOLHEAD_PARK_PAUSE_CANCEL x=300 y=320
    M84 ; Motors off
    M300
    M300
    M300

[gcode_macro SET_VELOCITY_LIMIT]
rename_existing: SET_VELOCITY_LIMIT_BASE
gcode:
    {% if params.ACCEL is defined %}
      SET_VELOCITY_LIMIT_BASE ACCEL_TO_DECEL="{params.ACCEL|float * 0.5 }"
    {% endif %}
    SET_VELOCITY_LIMIT_BASE { rawparams }

[gcode_macro M204]
rename_existing: M204_1
gcode:
    ; ignore retraction accel leave klipper to calculate it
    {% if params.P is defined %}
      SET_VELOCITY_LIMIT ACCEL="{params.P}"
    {% elif params.S is defined %}
      SET_VELOCITY_LIMIT ACCEL="{params.S}"
    {% elif params.T is defined %}
      SET_VELOCITY_LIMIT ACCEL="{params.T}"
    {% endif %}


[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro LINEADEPURGA]
gcode:
    G90                     ; Absolute position
    G1 X50 Y5 F6000         ; position
    G1 Z0.28 F600           ; position
    M83
    G1 X100 E8  F1000      ; purge
    G1 X150 E8  F1000      ; purge
    G1 X200 E8  F1000      ; purge
    G1 X250 E8  F1000      ; purge
    M82
    G92 E0                  ; reset extruder distance position
    G1 F6000

# [gcode_macro G27]
# description: Park
# gcode:
#     ##### set defaults #####
#     {% set x = params.X|default(5) %}      #edit to your park position
#     {% set y = params.Y|default(5) %}      #edit to your park position
#     {% set z = params.Z|default(25)|float %} #edit to your park position
#     ##### calculate save lift position #####
#     {% set max_z = printer.toolhead.axis_maximum.z|float %}
#     {% set act_z = printer.toolhead.position.z|float %}
#     {% set lift_z = z|abs %}
#     {% if act_z < (max_z - lift_z) %}
#         {% set z_safe = lift_z %}
#     {% else %}
#         {% set z_safe = max_z - act_z %}
#     {% endif %}
#     {%set min_extrude_temp = printer.configfile.settings["extruder"]["min_extrude_temp"]|int %}
#     {%set act_extrude_temp = printer.extruder.temperature|int %}
#     ##### end of definitions #####
#     G91
#     {% if act_extrude_temp > min_extrude_temp %}
#       G10 ;retract
#       _Park_retract
#     {% else %}
#       RESPOND MSG="Extruder not hot enough"
#     {% endif %}
#     {% if "xyz" in printer.toolhead.homed_axes %}
#       G1 Z{z_safe}
#       G90
#       G1 X{x} Y{y} F10800
#     {% else %}
#       RESPOND MSG="Printer not homed"
#     {% endif %}

# [gcode_macro _Park_retract]
# gcode:
#   G1 E-10.0 F1200

# [gcode_macro _Park_unretract]
# gcode:
#   G1 E10.5 F1200